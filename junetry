-- üßë‚Äçüíª WEEKLY SPIN REPORT v2.0 ‚Äì hardened logic for active subscribers

WITH CompanyName AS (
    SELECT DISTINCT SPIN, NAME
    FROM LI_LCS_ODS.SPIN
    WHERE ODS_END_DATE = '31-DEC-2099'
),

-- STEP 1: Get latest valid transaction per subscriber (not deenrolled or transferred out)
LatestTransactions AS (
    SELECT DISTINCT
        SUBSCRIBER_ID,
        SAC,
        TRANSTYPE,
        ROW_NUMBER() OVER (PARTITION BY SUBSCRIBER_ID ORDER BY INSERTDATE DESC) AS rn
    FROM LI_NLAD_ODS.AUDIT_TRANSACTION
    WHERE
        TRANSSTATUS = 'VALID'
        AND TRANSTYPE != 'TRANSFEROUT'
        AND INSERTDATE < DATE '2025-06-08'
        AND ODS_END_DATE = '31-DEC-2099'
),

FilteredLatest AS (
    SELECT SUBSCRIBER_ID, SAC
    FROM LatestTransactions
    WHERE rn = 1 AND TRANSTYPE NOT IN ('DEENROLL')
),

-- STEP 2: Join with SPIN via SAC to get active consumers
ActiveConsumers AS (
    SELECT
        ss.SPIN,
        COUNT(DISTINCT fl.SUBSCRIBER_ID) AS ActiveSubscribers
    FROM FilteredLatest fl
    LEFT JOIN LI_NLAD_ODS.SAC_SPIN ss
        ON fl.SAC = ss.SAC
    WHERE ss.ODS_END_DATE = '31-DEC-2099'
    GROUP BY ss.SPIN
),

-- STEP 3: Two-week window for transaction metrics
FilteredTransactions AS (
    SELECT
        at.*,
        ss.SPIN
    FROM LI_NLAD_ODS.AUDIT_TRANSACTION at
    LEFT JOIN LI_NLAD_ODS.SAC_SPIN ss
        ON at.SAC = ss.SAC
    WHERE
        at.TRANSSTATUS = 'VALID'
        AND at.ODS_END_DATE = '31-DEC-2099'
        AND ss.ODS_END_DATE = '31-DEC-2099'
        AND at.INSERTDATE BETWEEN DATE '2025-05-25' AND DATE '2025-06-08'
)

-- FINAL REPORT
SELECT
    ac.SPIN,
    cn.NAME,
    COALESCE(ac.ActiveSubscribers, 0) AS ActiveSubscribers,

    -- WEEK 1
    COUNT(CASE WHEN ft.TRANSTYPE = 'ENROLL' AND ft.INSERTDATE < DATE '2025-06-01' THEN 1 END) AS Week1_Enrolls,
    COUNT(CASE WHEN ft.TRANSTYPE = 'ENROLL' AND ft.INSERTDATE < DATE '2025-06-01' THEN ft.REP_ID END) AS Week1_Enrolls_REP,
    COUNT(CASE WHEN ft.TRANSTYPE = 'TRANSFERIN' AND ft.INSERTDATE < DATE '2025-06-01' THEN 1 END) AS Week1_Transfers,
    COUNT(CASE WHEN ft.TRANSTYPE = 'TRANSFERIN' AND ft.INSERTDATE < DATE '2025-06-01' THEN ft.REP_ID END) AS Week1_Transfers_REP,
    COUNT(CASE WHEN ft.TRANSTYPE = 'TRANSFEROUT' AND ft.INSERTDATE < DATE '2025-06-01' THEN 1 END) AS Week1_TransferOuts,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE < DATE '2025-06-01' THEN 1 END) AS Week1_DeEnrollments,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE < DATE '2025-06-01' AND ft.DEENROLLMENTCODE = 'DEENROLLNONUSAGE' THEN 1 END) AS Week1_Nonusage,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE < DATE '2025-06-01' AND ft.DEENROLLMENTCODE = 'DEENROLLDECEASED' THEN 1 END) AS Week1_Deceased,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE < DATE '2025-06-01' AND ft.DEENROLLMENTCODE = 'DEENROLLLEAVING' THEN 1 END) AS Week1_Leaving,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE < DATE '2025-06-01' AND ft.DEENROLLMENTCODE = 'DEENROLLFAILEDRECERTIFICATION' THEN 1 END) AS Week1_Recert,

    -- WEEK 2
    COUNT(CASE WHEN ft.TRANSTYPE = 'ENROLL' AND ft.INSERTDATE >= DATE '2025-06-01' THEN 1 END) AS Week2_Enrolls,
    COUNT(CASE WHEN ft.TRANSTYPE = 'ENROLL' AND ft.INSERTDATE >= DATE '2025-06-01' THEN ft.REP_ID END) AS Week2_Enrolls_REP,
    COUNT(CASE WHEN ft.TRANSTYPE = 'TRANSFERIN' AND ft.INSERTDATE >= DATE '2025-06-01' THEN 1 END) AS Week2_Transfers,
    COUNT(CASE WHEN ft.TRANSTYPE = 'TRANSFERIN' AND ft.INSERTDATE >= DATE '2025-06-01' THEN ft.REP_ID END) AS Week2_Transfers_REP,
    COUNT(CASE WHEN ft.TRANSTYPE = 'TRANSFEROUT' AND ft.INSERTDATE >= DATE '2025-06-01' THEN 1 END) AS Week2_TransferOuts,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE >= DATE '2025-06-01' THEN 1 END) AS Week2_DeEnrollments,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE >= DATE '2025-06-01' AND ft.DEENROLLMENTCODE = 'DEENROLLNONUSAGE' THEN 1 END) AS Week2_Nonusage,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE >= DATE '2025-06-01' AND ft.DEENROLLMENTCODE = 'DEENROLLDECEASED' THEN 1 END) AS Week2_Deceased,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE >= DATE '2025-06-01' AND ft.DEENROLLMENTCODE = 'DEENROLLLEAVING' THEN 1 END) AS Week2_Leaving,
    COUNT(CASE WHEN ft.TRANSTYPE = 'DEENROLL' AND ft.INSERTDATE >= DATE '2025-06-01' AND ft.DEENROLLMENTCODE = 'DEENROLLFAILEDRECERTIFICATION' THEN 1 END) AS Week2_Recert

FROM ActiveConsumers ac
LEFT JOIN FilteredTransactions ft ON ac.SPIN = ft.SPIN
LEFT JOIN CompanyName cn ON ac.SPIN = cn.SPIN
GROUP BY ac.SPIN, cn.NAME, ac.ActiveSubscribers
ORDER BY ActiveSubscribers DESC;
